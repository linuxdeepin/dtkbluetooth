/*!
@~chinese
@file dbluetoothdevice.h

@class Dtk::Bluetooth::DDevice dbluetoothdevice.h
@brief 对于蓝牙设备的封装

@enum Dtk::Bluetooth::DDevice::AddressType dbluetoothdevice.h
@var Dtk::Bluetooth::DDevice::AddressType Dtk::Bluetooth::DDevice::Public
公共地址
@var Dtk::Bluetooth::DDevice::AddressType Dtk::Bluetooth::DDevice::Random
随机地址
@var Dtk::Bluetooth::DDevice::AddressType Dtk::Bluetooth::DDevice::Unknown
未知地址类型, 内部错误

@fn bool DDevice::blocked() const
@brief 设备是否被锁定
@return 代表是否被锁定的布尔值

@fn void DDevice::setBlocked(bool blocked)
@brief 设置是否锁定该设备

@fn bool DDevice::connected() const
@brief 设备是否已连接
@return 代表是否已连接的布尔值

@fn bool DDevice::legacyPairing() const
@brief 设备是否支持传统配对
@return 代表是否支持传统配对的布尔值

@fn bool DDevice::paired() const
@brief 设备是否配对
@return 代表是否已配对的布尔值

@fn bool DDevice::servicesResolved() const
@brief 发现服务是否已解析
@return 代表发现服务是否已解析的布尔值

@fn bool DDevice::trusted() const
@brief 设备是否被信任
@return 代表设备是否被信任的布尔值

@fn void DDevice::setTrusted(bool trusted)
@brief 设置是否信任设备

@fn quint64 DDevice::adapter() const
@brief 获取当前设备所属的适配器的id
@return 适配器的id

@fn QString DDevice::address() const
@brief 当前设备的地址
@return 设备的地址组成的字符串

@fn AddressType DDevice::addressType() const
@brief 当前设备的地址类型
@return 代表地址类型的枚举

@fn QString DDevice::alias() const
@brief 当前设备的别名
@return 设备别名组成的字符串

@fn QString DDevice::name() const
@brief 当前设备的名字
@return 设备名字组成的字符串

@fn QBluetoothDeviceInfo DDevice::deviceInfo() const
@brief 当前设备的设备信息
@return 一些设备信息组成的对象

@fn QString DDevice::icon() const
@brief 当前设备能用什么图标表示
@return 图标类型组成的字符串

@fn qint16 DDevice::RSSI() const
@brief 当前设备的信号强度
@return 代表强度的数值
@note 此属性只在发现设备时更新

@fn quint16 DDevice::appearance() const
@brief 当前设备外观, 数值含义参考<a href="https://btprodspecificationrefs.blob.core.windows.net/assigned-numbers/Assigned%20Number%20Types/Assigned%20Numbers.pdf">这个文档</a>
@return 代表外观的数值

@fn bool DDevice::isValid() const
@brief 当前设备对象是否合法
@return 代表是否合法的布尔值
@note 例如设备已移除但对象还没析构

@fn DExpected<void> DDevice::disconnectDevice() const
@brief 断开该设备
@return 调用结果

@fn DExpected<void> DDevice::cancelPairing() const
@brief 取消配对
@return 调用结果

@fn DExpected<void> DDevice::connectDevice() const
@brief 连接该设备
@return 调用结果

@fn DExpected<void> DDevice::pair() const
@brief 和该设备配对
@return 调用结果

@fn void DDevice::blockedChanged(bool blocked)
@brief 信号, 设备锁定属性改变时触发

@fn void DDevice::connectedChanged(bool connected)
@brief 信号, 设备已连接属性改变时触发

@fn void DDevice::pairedChanged(bool servicesResolved)
@brief 信号, 设备已配对属性改变时触发

@fn void DDevice::servicesResolvedChanged(bool servicesResolved)
@brief 信号, 发现服务解析属性改变时触发

@fn void DDevice::trustedChanged(bool trusted)
@brief 信号, 信任设备属性改变时触发

@fn void DDevice::addressTypeChanged(AddressType type)
@brief 信号, 地址类型属性改变时触发

@fn void DDevice::aliasChanged(const QString &alias)
@brief 信号, 设备别名属性改变时触发

@fn void DDevice::RSSIChanged(qint16 rssi)
@brief 信号, 设备信号强调属性改变时触发

@fn void DDevice::removed()
@brief 信号, 本设备被移除时触发

*/
