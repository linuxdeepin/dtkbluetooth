/*!
@~chinese
@file dbluetoothmanager.h

@class Dtk::Bluetooth::DManager dbluetoothmanager.h
@brief 蓝牙管理类, DAdapter对象由此创建

@fn bool DManager::available() const
@brief 蓝牙服务是否可用
@return 指示是否可用的布尔值

@fn DExpected<QList<quint64> > DManager::adapters() const
@brief 获取当前存在的适配器
@return 调用结果, 由适配器id组成的列表

@fn DExpected<QSharedPointer<DAdapter> > DManager::adapterFromId(quint64 adapterId) const
@brief 由适配器id创建对应的DAdapter对象
@param [in] adapterId 适配器Id
@return 调用结果, 一个DAdapter对象

@fn DExpected<void> DManager::registerAgent(const QSharedPointer<DAgent> &agent)
@brief 注册自定义的蓝牙代理
@param [in] agent 自定义蓝牙代理对象
@return 调用结果

@fn DExpected<void> DManager::unregisterAgent(const QSharedPointer<DAgent> &agent)
@brief 注销自定义的蓝牙代理
@param [in] agent 自定义蓝牙代理对象
@return 调用结果

@fn DExpected<void> DManager::requestDefaultAgent(const QSharedPointer<DAgent> &agent)
@brief 请求代理成为默认代理
@param [in] agent 自定义蓝牙代理对象
@return 调用结果

@fn void DManager::adapterAdded(quint64 adapterId)
@brief 信号, 当适配器被添加时被触发

@fn void DManager::adapterRemoved(quint64 adapterId)
@brief 信号, 当适配器被移除时被触发

*/
